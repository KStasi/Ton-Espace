#!/usr/bin/fift -s
"TonUtil.fif" include

{ ."usage: " $0 type ." <filename-base> <seqno> [<savefile>]" cr
  ."Creates a request to simple configuration smart contract requesting to change configuration smart contract code to the one currently stored in update-planet-code.fif, "
  ."with private key loaded from file <filename-base>.pk, "
  ."and saves it into <savefile>.boc ('update-planet-query.boc' by default)" cr 1 halt
} : usage
$# dup 2 < swap 3 > or ' usage if

"build/new-planet" constant file-base
0 constant qseqno
"build/updated-planet-code.fif" constant update-planet-source
"build/new-spaceship" constant owner-file-base
100 constant interval  // valid for 100 seconds

3 :$1..n
$1 =: file-base
$2 parse-int =: qseqno
$3 "build/updated-planet-query" replace-if-null constant savefile

file-base +".addr" load-address
2dup 2constant config_addr
."Configuration smart contract address = " 2dup .addr cr 6 .Addr cr

owner-file-base +".addr" load-address
2dup 2constant spaceship_addr
."Owner address = " 2dup .addr cr 6 .Addr cr
owner-file-base +".pk" load-keypair nip constant owner_pk

."Loading new configuration smart contract code from file " update-planet-source type cr
"Asm.fif" include
update-planet-source include
dup <s csr. cr

// create a message
<b 0xaaeeee 32 u, 1 roll ref, b>
cr ."Message body is " dup <s csr. cr
2 boc+>B dup Bx. cr
savefile +".boc" tuck B>file
."(Saved to file " type .")" cr
